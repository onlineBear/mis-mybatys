<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.anson.mis.dao.system.MenuDao">

    <resultMap id="baseMap" type="menu">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="no" property="no" jdbcType="NVARCHAR"/>
        <result column="name" property="name" jdbcType="NVARCHAR"/>
        <result column="iconUrl" property="iconUrl" jdbcType="NVARCHAR"/>
        <result column="isContent" property="isContent" jdbcType="BOOLEAN"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="NVARCHAR"/>
        <result column="isDisplay" property="isDisplay" jdbcType="BOOLEAN"/>
        <result column="lastUpdateTime" property="lastUpdateTime" jdbcType="TIMESTAMP"/>
        <association property="parentMenu" column="parentMenuId" javaType="Menu" resultMap="parentMenu" />
    </resultMap>

    <resultMap id="parentMenuMap" type="menu">
        <id column="parentMenuId" property="id" jdbcType="BIGINT"/>
        <result column="parentMenuNo" property="no" jdbcType="NVARCHAR"/>
        <result column="parentMenuName" property="name" jdbcType="NVARCHAR"/>
        <result column="parentMenuIconUrl" property="iconUrl" jdbcType="NVARCHAR"/>
        <result column="parentMenuIsContent" property="isContent" jdbcType="BOOLEAN"/>
        <result column="parentMenuLevel" property="level" jdbcType="INTEGER"/>
        <result column="parentMenuDescription" property="description" jdbcType="NVARCHAR"/>
        <result column="parentMenuIsDisplay" property="isDisplay" jdbcType="BOOLEAN"/>
        <result column="parentMenuLastUpdateTime" property="lastUpdateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseColumns">
      	${alias}.id, ${alias}.no, ${alias}.name, ${alias}.iconUrl,
        ${alias}.isContent, ${alias}.level, ${alias}.description, ${alias}.isDisplay,
        ${alias}.lastUpdateTime, ${alias}.parentMenuId
    </sql>

    <sql id="Example_Where_Clause" >
        <where >
          <foreach collection="oredCriteria" item="criteria" separator="or" >
            <if test="criteria.valid" >
              <trim prefix="(" suffix=")" prefixOverrides="and" >
                <foreach collection="criteria.criteria" item="criterion" >
                  <choose >
                    <when test="criterion.noValue" >
                      and ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue" >
                      and ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue" >
                      and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue" >
                      and ${criterion.condition}
                      <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
          <foreach collection="example.oredCriteria" item="criteria" separator="or" >
            <if test="criteria.valid" >
              <trim prefix="(" suffix=")" prefixOverrides="and" >
                <foreach collection="criteria.criteria" item="criterion" >
                  <choose >
                    <when test="criterion.noValue" >
                      and ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue" >
                      and ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue" >
                      and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue" >
                      and ${criterion.condition}
                      <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </foreach>
        </where>
    </sql>

    <select id="selById" parameterType="Long" resultMap="baseMap">
		select m.id, m.no, m.name, m.iconUrl, m.isContent,
               m.level, m.description, m.isDisplay, m.lastUpdateTime,
               m.parentMenuId, pm.no, pm.name, pm.iconUrl, pm.isContent,
               pm.level, pm.description, pm.isDisplay, parentMenuLastUpdateTime = pm.lastUpdateTime,
		from Menu as m
        left join Menu as pm on m.parentMenuId=pm.id
		where m.id = #{id}
    </select>

    <select id="selByIds" resultMap="baseMap">
		select <include refid="baseColumns"><property name="alias" value="m"/></include>
		from Menu as u
		where m.id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item.id}
            </foreach>
        order by m.id desc
    </select>

    <select id="selByIdList" resultMap="baseMap">
		select <include refid="baseColumns"><property name="alias" value="m"/></include>
		from Menu as u
		where m.id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item.id}
            </foreach>
        order by m.id desc
    </select>

    <select id="selByIdArray" resultMap="baseMap">
		select <include refid="baseColumns"><property name="alias" value="m"/></include>
		from Menu as m
		where m.id in
            <foreach collection="array" item="item" open="(" close=")" separator=",">
                #{item.id}
            </foreach>
        order by m.id desc
    </select>

    <select id="selByExample" parameterType="example" resultMap="baseMap">
        select
            <include refid="baseColumns"><property name="alias" value="m"/></include>
		from Menu as m
            <if test="_parameter != null" >
              <include refid="Example_Where_Clause" />
            </if>
        <if test="orderByClause != null" >
          order by ${orderByClause}
        </if>
    </select>

    <select id="countByExample" parameterType="example" resultType="Long" >
        select count(1) from Menu
        <if test="_parameter != null" >
          <include refid="Example_Where_Clause" />
        </if>
    </select>

    <insert id="insert" parameterType="menu">
        insert into Menu
              (id, parentMenuId, no, name, iconUrl,
              isContent, level, description, isDisplay, lastUpdateTime)
        values(#{id}, #{parentMenu.id}, #{no}, #{name}, #{iconUrl},
              #{isContent}, #{level}, #{description}, #{isDisplay}, #{lastUpdateTime})
    </insert>

    <insert id="insertList">
        insert into Menu
            (id, parentMenuId, no, name, iconUrl,
            isContent, level, description, isDisplay, lastUpdateTime)
        values
           <foreach collection="list" item="item" separator="," open="(" close=")">
               #{id}, #{parentMenu.id}, #{no}, #{name}, #{iconUrl},
               #{isContent}, #{level}, #{description}, #{isDisplay}, #{lastUpdateTime}
           </foreach>
    </insert>

    <update id="updateById" parameterType="menu">
        update Menu
        set no = #{no},
            parentMenuId = #{parentMenu.id},
            no = #{no},
            name = #{name},
            iconUrl = #{iconUrl},
            isContent = #{isContent},
            level = #{level},
            description = #{description},
            isDisplay = #{isDisplay},
            lastUpdateTime = #{lastUpdateTime}
        where id = #{id}
    </update>

    <update id="updateByIdSelective" parameterType="menu">
        update Menu
        <set>
            <if test="parentMenu.id != null">
                parentMenuId = #{parentMenu.id},
            </if>
            <if test="no != null">
                no = #{no},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="iconUrl != null">
                iconUrl = #{iconUrl},
            </if>
            <if test="isContent != null">
                isContent = #{isContent},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="isDisplay != null">
                isDisplay = #{isDisplay},
            </if>
            <if test="lastUpdateTime">
                lastUpdateTime = #{lastUpdateTime}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByExample" parameterType="map">
        update Menu
        set no = #{record.no},
            parentMenuId = #{record.parentMenu.id},
            no = #{record.no},
            name = #{record.name},
            iconUrl = #{record.iconUrl},
            isContent = #{record.isContent},
            level = #{record.level},
            description = #{record.description},
            isDisplay = #{record.isDisplay},
            lastUpdateTime = #{record.lastUpdateTime}
        <if test="_parameter != null" >
          <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExampleSelective" parameterType="map">
        update [User]
        <set>
            <if test="record.parentMenu.id != null">
                parentMenuId = #{record.parentMenu.id},
            </if>
            <if test="record.no != null">
                no = #{record.no},
            </if>
            <if test="record.name != null">
                name = #{record.name},
            </if>
            <if test="record.iconUrl != null">
                iconUrl = #{record.iconUrl},
            </if>
            <if test="record.isContent != null">
                isContent = #{record.isContent},
            </if>
            <if test="record.level != null">
                level = #{record.level},
            </if>
            <if test="record.description != null">
                description = #{record.description},
            </if>
            <if test="record.isDisplay != null">
                isDisplay = #{record.isDisplay},
            </if>
            <if test="record.lastUpdateTime">
                lastUpdateTime = #{record.lastUpdateTime}
            </if>
        </set>
        <if test="_parameter != null" >
          <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <delete id="delById" parameterType="Long">
        delete from Menu where id = #{id}
    </delete>

    <delete id="delByIdList">
        delete from Menu where id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item.id}
        </foreach>
    </delete>

    <delete id="delByIdArray">
        delete from Menu where id in
        <foreach collection="array" item="item" open="(" close=")" separator=",">
            #{item.id}
        </foreach>
    </delete>
</mapper>
